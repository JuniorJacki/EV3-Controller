



        // brick
        private async void connect() 
        {
            brick = new Brick(new BluetoothCommunication("COM6"));
            brick.BrickChanged += brick_Changed;
            try
            {
                await brick.ConnectAsync();
                Trace.WriteLine("Verbindung Hergestellt");
                brick.BatchCommand.TurnMotorAtSpeedForTime(OutputPort.A, 50, 1000, false);
                brick.BatchCommand.PlayTone(5, 1000, 500);
                await brick.BatchCommand.SendCommandAsync();
            } catch (Exception e)
            {
                Trace.WriteLine(e);
                Trace.WriteLine("Verbindung konnte nicht hergestellt werden!");
            }
        
        }

        private void brick_Changed(object sender, BrickChangedEventArgs e)
        {
            Trace.WriteLine("Brick CHanged");
        }
        // BRick end

        //Controls


        //NEw controls
       
       // FILE
        private void writefiletest()
        {
             string Filename = "data.xml";
            XmlDocument doc = new XmlDocument();
            doc.LoadXml("<item><name>wrench</name></item>");

            // Add a price element.
            XmlElement newElem = doc.CreateElement("price");
            newElem.InnerText = "10.95";
            doc.DocumentElement.AppendChild(newElem);

            // Save the document to a file. White space is
            // preserved (no white space).
            doc.PreserveWhitespace = true;
            doc.Save(Filename);
        }


         //Kann alle 2 sekunden aktiviert werden
           nowtime = DateTimeOffset.Now.ToUnixTimeSeconds();
           if (nowtime - 2 > lasttime)
            {
                Trace.WriteLine(nowtime - lasttime);
                lasttime = DateTimeOffset.Now.ToUnixTimeSeconds();
                guiupdater();
            }


            //README

            # EV3_Controller
**by GowySource**
## Used APIs:
- [Legoev3](https://github.com/BrianPeek/legoev3)
- [WiimoteLib](https://github.com/BrianPeek/WiimoteLib)

Release demnächst

## Entwicklung

```javascript
private void startapplication()
{
...
}
```


## Service
- Website: https://juniorjacki.github.io/EV3-Controller/
- Support: [Discord](https://discord.gg/pf4FaBXtX7)


![GitHub all releases](https://img.shields.io/github/downloads/JuniorJacki/EV3-Controller/total?label=Downloads&logo=GITHUB&logoColor=%23ff0000) 
![Discord](https://img.shields.io/discord/897018883452571669?label=Discord&logo=Discord)
![Relative date](https://img.shields.io/date/1634116301?label=Letztes%20Update&logo=CLockify)

// WIimote 



public void Load()
        {
            IsEnabled = true;

            try
            {
                _wiimote = new Wiimote();
                _wiimote.Connect();
                _wiimote.WiimoteChanged += wiimote_WiimoteChanged;

                _wiimote.SetRumble(true);
                _wiimote.SetLEDs(true, false, false, true);
                Thread.Sleep(300);
                _wiimote.SetRumble(false);

            }
            catch (Exception exc)
            {
                Trace.WriteLine(exc.Message);
                try
                {
                    _wiimote.SetLEDs(false, false, false, false);
                }
                catch (Exception exception)
                {
                    Trace.WriteLine(exception.Message);
                }
                IsEnabled = false;
            }
        }

        private void wiimote_WiimoteChanged(object sender, WiimoteChangedEventArgs e)
        {
             WiimoteState ws = e.WiimoteState;
            Trace.WriteLine(ws.ButtonState.A);

        }
    }